 1. MySQL Deployment with Persistent Volume Claim

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_DATABASE
              value: mydb
            - name: MYSQL_USER
              value: user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: db-password
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
 2. MySQL Service Configuration

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
 3. Spring Boot Application Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
spec:
  selector:
    matchLabels:
      app: springboot-app
  replicas: 1
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-container
          image: dileepkumar/springboot-onetoone:v1.0
          ports:
            - containerPort: 9095
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/mydb
            - name: SPRING_DATASOURCE_USERNAME
              value: user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: db-password
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
4. Spring Boot Service (LoadBalancer Type)
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
spec:
  type: LoadBalancer
  selector:
    app: springboot-app
  ports:
    - port: 9095
      targetPort: 9095
 5. ConfigMap for Application Properties (Optional)
Example ConfigMap for extra properties:

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  SPRING_JPA_SHOW_SQL: "true"
You can reference this ConfigMap inside your Spring Boot deployment by adding:


envFrom:
  - configMapRef:
      name: app-config
6. Secret for Database Credentials

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  root-password: cm9vdA==     # Base64 for 'root'
  db-password: cGFzc3dvcmQ=   # Base64 for 'password'